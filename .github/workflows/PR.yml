# This workflow runs when a PR is requested
name: Pull Request Flow
on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths: ['src/**', 'data/**', '.github/workflows/PR.yml', 'package.json', 'pnpm.lock']

# Ensures that only one deploy task per branch/environment will run at a time.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    if: github.event.pull_request.draft == false
    env:
      fork_pr: ${{ github.event.pull_request.head.repo.full_name != github.repository }}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout D2AI
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - uses: pnpm/action-setup@v2

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: pnpm

      - name: Install
        run: pnpm install --frozen-lockfile --prefer-offline

      - name: Compile Typescript
        run: pnpm build

      - name: Get D2 Manifest
        uses: nick-fields/retry@v2.8.2
        with:
          timeout_minutes: 2
          max_attempts: 3
          command: pnpm manifest:get
        env:
          API_KEY: ${{ secrets.API_KEY }}

      - name: Generate Data
        run: pnpm generate-data

      - name: porcelain check
        uses: dorny/paths-filter@v2
        id: data
        with:
          base: HEAD
          filters: |
            changed:
              - '**'

      - name: Commit other updated values
        if: steps.data.outputs.changed == 'true' && !env.fork_pr
        uses: stefanzweifel/git-auto-commit-action@v4.7.2
        with:
          commit_message: other updates from manifest
          commit_user_name: D2AI Bot
          commit_user_email: destinyitemmanager@gmail.com
          commit_author: D2AI Bot <destinyitemmanager@gmail.com>

      - name: Fail the Build w/ Note
        if: steps.data.outputs.changed == 'true' && env.fork_pr
        uses: actions/github-script@v7.0.1
        with:
          script: |
            core.setFailed('Please run `pnpm generate-data`')
